.data

vmt_TV:
  TV.Start

vmt_Tree:
  Tree.Init
  Tree.SetRight
  Tree.SetLeft
  Tree.GetRight
  Tree.GetLeft
  Tree.GetKey
  Tree.SetKey
  Tree.GetHas_Right
  Tree.GetHas_Left
  Tree.SetHas_Left
  Tree.SetHas_Right
  Tree.Compare
  Tree.Insert
  Tree.Delete
  Tree.Remove
  Tree.RemoveRight
  Tree.RemoveLeft
  Tree.Search
  Tree.Print
  Tree.RecPrint
  Tree.accept

vmt_Visitor:
  Visitor.visit

vmt_MyVisitor:
  MyVisitor.visit

.text

  jal Main
  li $v0 10
  syscall

Main:
  sw $fp -8($sp)
  move $fp $sp
  subu $sp $sp 8
  sw $ra -4($fp)
  li $a0 4
  jal _heapAlloc
  move $t0 $v0
  la $t9 vmt_TV
  sw $t9 0($t0)
  bnez $t0 null1
  la $a0 _str0
  j _error
null1:
  lw $t1 0($t0)
  lw $t1 0($t1)
  move $a0 $t0
  jalr $t1
  move $t1 $v0
  move $a0 $t1
  jal _print
  lw $ra -4($fp)
  lw $fp -8($fp)
  addu $sp $sp 8
  jr $ra

TV.Start:
  sw $fp -8($sp)
  move $fp $sp
  subu $sp $sp 12
  sw $ra -4($fp)
  sw $s0 0($sp)
  li $a0 28
  jal _heapAlloc
  move $t0 $v0
  la $t9 vmt_Tree
  move $s0 $t0
  sw $t9 0($t0)
  bnez $t0 null2
  la $a0 _str0
  j _error
null2:
  lw $t0 0($s0)
  lw $t0 0($t0)
  move $a0 $s0
  li $a1 16
  jalr $t0
  sw $t9 0($t0)
  bnez $t0 null3
  la $a0 _str0
  j _error
null3:
  lw $t0 0($s0)
  lw $t0 0($t0)
  move $a0 $s0
  jalr $t0
  li $a0 100000000
  jal _print
  sw $t9 0($t0)
  bnez $t0 null4
  la $a0 _str0
  j _error
null4:
  lw $t0 0($s0)
  lw $t0 0($t0)
  move $a0 $s0
  li $a1 8
  jalr $t0
  sw $t9 0($t0)
  bnez $t0 null5
  la $a0 _str0
  j _error
null5:
  lw $t0 0($s0)
  lw $t0 0($t0)
  move $a0 $s0
  li $a1 24
  jalr $t0
  sw $t9 0($t0)
  bnez $t0 null6
  la $a0 _str0
  j _error
null6:
  lw $t0 0($s0)
  lw $t0 0($t0)
  move $a0 $s0
  li $a1 4
  jalr $t0
  sw $t9 0($t0)
  bnez $t0 null7
  la $a0 _str0
  j _error
null7:
  lw $t0 0($s0)
  lw $t0 0($t0)
  move $a0 $s0
  li $a1 12
  jalr $t0
  sw $t9 0($t0)
  bnez $t0 null8
  la $a0 _str0
  j _error
null8:
  lw $t0 0($s0)
  lw $t0 0($t0)
  move $a0 $s0
  li $a1 20
  jalr $t0
  sw $t9 0($t0)
  bnez $t0 null9
  la $a0 _str0
  j _error
null9:
  lw $t0 0($s0)
  lw $t0 0($t0)
  move $a0 $s0
  li $a1 28
  jalr $t0
  sw $t9 0($t0)
  bnez $t0 null10
  la $a0 _str0
  j _error
null10:
  lw $t0 0($s0)
  lw $t0 0($t0)
  move $a0 $s0
  li $a1 14
  jalr $t0
  sw $t9 0($t0)
  bnez $t0 null11
  la $a0 _str0
  j _error
null11:
  lw $t0 0($s0)
  lw $t0 0($t0)
  move $a0 $s0
  jalr $t0
  li $a0 100000000
  jal _print
  li $a0 12
  jal _heapAlloc
  move $t0 $v0
  la $t9 vmt_MyVisitor
  move $t0 $t0
  li $a0 50000000
  jal _print
  sw $t9 0($t0)
  bnez $t0 null12
  la $a0 _str0
  j _error
null12:
  lw $t1 0($s0)
  lw $t1 0($t1)
  move $a0 $s0
  move $a1 $t0
  jalr $t1
  li $a0 100000000
  jal _print
  sw $t9 0($t0)
  bnez $t0 null13
  la $a0 _str0
  j _error
null13:
  lw $t1 0($s0)
  lw $t1 0($t1)
  move $a0 $s0
  li $a1 24
  jalr $t1
  move $t1 $v0
  move $a0 $t1
  jal _print
  sw $t9 0($t0)
  bnez $t0 null14
  la $a0 _str0
  j _error
null14:
  lw $t1 0($s0)
  lw $t1 0($t1)
  move $a0 $s0
  li $a1 12
  jalr $t1
  move $t1 $v0
  move $a0 $t1
  jal _print
  sw $t9 0($t0)
  bnez $t0 null15
  la $a0 _str0
  j _error
null15:
  lw $t1 0($s0)
  lw $t1 0($t1)
  move $a0 $s0
  li $a1 16
  jalr $t1
  move $t1 $v0
  move $a0 $t1
  jal _print
  sw $t9 0($t0)
  bnez $t0 null16
  la $a0 _str0
  j _error
null16:
  lw $t1 0($s0)
  lw $t1 0($t1)
  move $a0 $s0
  li $a1 50
  jalr $t1
  move $t1 $v0
  move $a0 $t1
  jal _print
  sw $t9 0($t0)
  bnez $t0 null17
  la $a0 _str0
  j _error
null17:
  lw $t1 0($s0)
  lw $t1 0($t1)
  move $a0 $s0
  li $a1 12
  jalr $t1
  move $t1 $v0
  move $a0 $t1
  jal _print
  sw $t9 0($t0)
  bnez $t0 null18
  la $a0 _str0
  j _error
null18:
  lw $t1 0($s0)
  lw $t1 0($t1)
  move $a0 $s0
  li $a1 12
  jalr $t1
  sw $t9 0($t0)
  bnez $t0 null19
  la $a0 _str0
  j _error
null19:
  lw $t1 0($s0)
  lw $t1 0($t1)
  move $a0 $s0
  jalr $t1
  sw $t9 0($t0)
  bnez $t0 null20
  la $a0 _str0
  j _error
null20:
  lw $t1 0($s0)
  lw $t1 0($t1)
  move $a0 $s0
  li $a1 12
  jalr $t1
  move $t1 $v0
  move $a0 $t1
  jal _print
  li $v0 0
  lw $s0 0($sp)
  lw $ra -4($fp)
  lw $fp -8($fp)
  addu $sp $sp 12
  jr $ra

Tree.Init:
  sw $fp -8($sp)
  move $fp $sp
  subu $sp $sp 8
  sw $ra -4($fp)
  move $t0 $a0
  move $t1 $a1
  move $t0 $v0
